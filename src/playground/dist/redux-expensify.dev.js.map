{"version":3,"sources":["redux-expensify.js"],"names":["addExpense","description","note","amount","createdAt","type","expense","id","removeExpense","editExpense","updates","setTextFilter","text","sortByDate","sortByAmount","setStartDate","startDate","setEndDate","endDate","expensesReducerDefaultState","expensesReducer","state","action","filter","map","filtersReducerDefaultState","sortBy","undefined","filtersReducer","getVisibleExpenses","expenses","startDateMatch","endDateMatch","textMatch","toLowerCase","includes","sort","a","b","store","filters","subscribe","getState","visibleExpenses","console","log","expenseOne","dispatch","expenseTwo","demoState"],"mappings":"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","sourcesContent":["import { createStore, combineReducers } from 'redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n// ADD_EXPENSE\r\nconst addExpense = (\r\n    {\r\n        description = '',\r\n        note = '',\r\n        amount = 0,\r\n        createdAt = 0\r\n    } = {}\r\n) => ({\r\n    type: 'ADD_EXPENSE',\r\n    expense: {\r\n        id: uuidv4(),\r\n        description,\r\n        note,\r\n        amount,\r\n        createdAt\r\n    }\r\n});\r\n\r\n// REMOVE_EXPENSE\r\nconst removeExpense = ({ id } = {}) => ({\r\n    type: 'REMOVE_EXPENSE',\r\n    id\r\n});\r\n\r\n// EDIT_EXPENSE\r\nconst editExpense = (id, updates) => ({\r\n    type: 'EDIT_EXPENSE',\r\n    id,\r\n    updates\r\n});\r\n\r\n// SET_TEXT_FILTER\r\nconst setTextFilter = (text = '') => ({\r\n    type: 'SET_TEXT_FILTER',\r\n    text\r\n});\r\n\r\n// SORT_BY_DATE\r\nconst sortByDate = () => ({\r\n    type: 'SORT_BY_DATE'\r\n});\r\n\r\n// SORT_BY_AMOUNT\r\nconst sortByAmount = () => ({\r\n    type: 'SORT_BY_AMOUNT'\r\n});\r\n\r\n// SET_START_DATE\r\nconst setStartDate = (startDate) => ({\r\n    type: 'SET_START_DATE',\r\n    startDate\r\n});\r\n\r\n// SET_END_DATE\r\nconst setEndDate = (endDate) => ({\r\n    type: 'SET_END_DATE',\r\n    endDate\r\n});\r\n\r\n// Expenses Reducer\r\n\r\nconst expensesReducerDefaultState = [];\r\n\r\nconst expensesReducer = (state = expensesReducerDefaultState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_EXPENSE':\r\n            return [\r\n                ...state,\r\n                action.expense\r\n            ];\r\n        case 'REMOVE_EXPENSE':\r\n            return state.filter(({ id }) => id !== action.id);\r\n        case 'EDIT_EXPENSE':\r\n            return state.map((expense) => {\r\n                if (expense.id === action.id) {\r\n                    return {\r\n                        ...expense,\r\n                        ...action.updates\r\n                    };\r\n                } else {\r\n                    return expense;\r\n                };\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Filters Reducer\r\n\r\nconst filtersReducerDefaultState = {\r\n    text: '',\r\n    sortBy: 'date',\r\n    startDate: undefined,\r\n    endDate: undefined\r\n};\r\n\r\nconst filtersReducer = (state = filtersReducerDefaultState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_TEXT_FILTER':\r\n            return {\r\n                ...state,\r\n                text: action.text\r\n            };\r\n        case 'SORT_BY_AMOUNT':\r\n            return {\r\n                ...state,\r\n                sortBy: 'amount'\r\n            };\r\n        case 'SORT_BY_DATE':\r\n            return {\r\n                ...state,\r\n                sortBy: 'date'\r\n            };\r\n        case 'SET_START_DATE':\r\n            return {\r\n                ...state,\r\n                startDate: action.startDate\r\n            };\r\n        case 'SET_END_DATE':\r\n            return {\r\n                ...state,\r\n                endDate: action.endDate\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Get visible expenses\r\nconst getVisibleExpenses = (expenses, { text, sortBy, startDate, endDate }) => {\r\n    return expenses.filter((expense) => {\r\n        const startDateMatch = typeof startDate !== 'number' || expense.createdAt >= startDate;\r\n        const endDateMatch = typeof endDate !== 'number' || expense.createdAt <= endDate;\r\n        const textMatch = expense.description.toLowerCase().includes(text.toLowerCase());\r\n\r\n        return startDateMatch && endDateMatch && textMatch;\r\n    }).sort((a, b) => {\r\n        if (sortBy === 'date') {\r\n            return a.amount < b.amount ? 1 : -1;\r\n        } else if (sortBy === 'amount') {\r\n            return a.amount < b.amount ? 1 : -1;\r\n        }\r\n    });\r\n};\r\n\r\n// Store creation\r\n\r\nconst store = createStore(\r\n    combineReducers({\r\n        expenses: expensesReducer,\r\n        filters: filtersReducer\r\n    })\r\n);\r\n\r\nstore.subscribe(() => {\r\n    const state = store.getState();\r\n    const visibleExpenses = getVisibleExpenses(state.expenses, state.filters);\r\n    console.log(visibleExpenses);\r\n});\r\n\r\nconst expenseOne = store.dispatch(addExpense({ description: 'Rent', amount: 100, createdAt: -2000 }));\r\nconst expenseTwo = store.dispatch(addExpense({ description: 'Coffee', amount: 300, createdAt: -1000 }));\r\n\r\n// store.dispatch(removeExpense({ id: expenseOne.expense.id }));\r\n// store.dispatch(editExpense(expenseTwo.expense.id, { amount: 500 }));\r\n\r\n// store.dispatch(setTextFilter('rent'));\r\n// store.dispatch(setTextFilter());\r\n\r\nstore.dispatch(sortByAmount());\r\n// store.dispatch(sortByDate());\r\n\r\n// store.dispatch(setStartDate(0)); // startDate 125\r\n// store.dispatch(setStartDate()); // startDate undefined\r\n// store.dispatch(setEndDate(999)); // endDate 1250\r\n\r\nconst demoState = {\r\n    expenses: [{\r\n        id: 'poijasdfhwer',\r\n        description: 'January Rent',\r\n        note: 'This was the final payment for that address',\r\n        amount: 54500,\r\n        createdAt: 0\r\n    }],\r\n    filters: {\r\n        text: 'rent',\r\n        sortBy: 'amount', // date or amount\r\n        startDate: undefined,\r\n        endDate: undefined\r\n    }\r\n};\r\n"],"file":"redux-expensify.dev.js"}