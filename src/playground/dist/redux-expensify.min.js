"use strict";var _redux=require("redux"),_uuid=require("uuid");function ownKeys(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),r.push.apply(r,n)}return r}function _objectSpread(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?ownKeys(r,!0).forEach(function(e){_defineProperty(t,e,r[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):ownKeys(r).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))})}return t}function _defineProperty(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}var addExpense=function(e){var t=0<arguments.length&&void 0!==e?e:{},r=t.description,n=void 0===r?"":r,o=t.note,a=void 0===o?"":o,i=t.amount,s=void 0===i?0:i,u=t.createdAt,d=void 0===u?0:u;return{type:"ADD_EXPENSE",expense:{id:(0,_uuid.v4)(),description:n,note:a,amount:s,createdAt:d}}},removeExpense=function(e){return{type:"REMOVE_EXPENSE",id:(0<arguments.length&&void 0!==e?e:{}).id}},editExpense=function(e,t){return{type:"EDIT_EXPENSE",id:e,updates:t}},setTextFilter=function(e){return{type:"SET_TEXT_FILTER",text:0<arguments.length&&void 0!==e?e:""}},sortByDate=function(){return{type:"SORT_BY_DATE"}},sortByAmount=function(){return{type:"SORT_BY_AMOUNT"}},setStartDate=function(e){return{type:"SET_START_DATE",startDate:e}},setEndDate=function(e){return{type:"SET_END_DATE",endDate:e}},expensesReducerDefaultState=[],expensesReducer=function(e,t){var r=0<arguments.length&&void 0!==e?e:expensesReducerDefaultState,n=1<arguments.length?t:void 0;switch(n.type){case"ADD_EXPENSE":return[].concat(_toConsumableArray(r),[n.expense]);case"REMOVE_EXPENSE":return r.filter(function(e){return e.id!==n.id});case"EDIT_EXPENSE":return r.map(function(e){return e.id===n.id?_objectSpread({},e,{},n.updates):e});default:return r}},filtersReducerDefaultState={text:"",sortBy:"date",startDate:void 0,endDate:void 0},filtersReducer=function(e,t){var r=0<arguments.length&&void 0!==e?e:filtersReducerDefaultState,n=1<arguments.length?t:void 0;switch(n.type){case"SET_TEXT_FILTER":return _objectSpread({},r,{text:n.text});case"SORT_BY_AMOUNT":return _objectSpread({},r,{sortBy:"amount"});case"SORT_BY_DATE":return _objectSpread({},r,{sortBy:"date"});case"SET_START_DATE":return _objectSpread({},r,{startDate:n.startDate});case"SET_END_DATE":return _objectSpread({},r,{endDate:n.endDate});default:return r}},getVisibleExpenses=function(e,t){var o=t.text,r=t.sortBy,a=t.startDate,i=t.endDate;return e.filter(function(e){var t="number"!=typeof a||e.createdAt>=a,r="number"!=typeof i||e.createdAt<=i,n=e.description.toLowerCase().includes(o.toLowerCase());return t&&r&&n}).sort(function(e,t){return"date"===r?e.amount<t.amount?1:-1:"amount"===r?e.amount<t.amount?1:-1:void 0})},store=(0,_redux.createStore)((0,_redux.combineReducers)({expenses:expensesReducer,filters:filtersReducer}));store.subscribe(function(){var e=store.getState(),t=getVisibleExpenses(e.expenses,e.filters);console.log(t)});var expenseOne=store.dispatch(addExpense({description:"Rent",amount:100,createdAt:-2e3})),expenseTwo=store.dispatch(addExpense({description:"Coffee",amount:300,createdAt:-1e3}));store.dispatch(sortByAmount());var demoState={expenses:[{id:"poijasdfhwer",description:"January Rent",note:"This was the final payment for that address",amount:54500,createdAt:0}],filters:{text:"rent",sortBy:"amount",startDate:void 0,endDate:void 0}};
//# sourceMappingURL=redux-expensify.min.js.map
