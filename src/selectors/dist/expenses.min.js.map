{"version":3,"sources":["expenses.js"],"names":["expenses","_ref","text","sortBy","startDate","endDate","filter","expense","startDateMatch","createdAt","endDateMatch","textMatch","description","toLowerCase","includes","sort","a","b","amount"],"mappings":"wGACe,SAACA,EAADC,GAAoD,IAAvCC,EAAuCD,EAAvCC,KAAMC,EAAiCF,EAAjCE,OAAQC,EAAyBH,EAAzBG,UAAWC,EAAcJ,EAAdI,QACjD,OAAOL,EAASM,OAAO,SAACC,GACpB,IAAMC,EAAsC,iBAAdJ,GAA0BG,EAAQE,WAAaL,EACvEM,EAAkC,iBAAZL,GAAwBE,EAAQE,WAAaJ,EACnEM,EAAYJ,EAAQK,YAAYC,cAAcC,SAASZ,EAAKW,eAL1E,OAAAL,GAAAE,GAAAC,IAQOI,KAAK,SAACC,EAPEC,GAAaf,MAAuC,SAAAC,EAAAa,EAAjCb,OAAiCc,EAAAC,OAAA,GAAA,EAAzBd,WAAyBD,EAAAa,EAAdX,OAAcY,EAAAC,OAAA,GAAA,OAAA","file":"expenses.min.js","sourcesContent":["// Get visible expenses\r\nexport default (expenses, { text, sortBy, startDate, endDate }) => {\r\n    return expenses.filter((expense) => {\r\n        const startDateMatch = typeof startDate !== 'number' || expense.createdAt >= startDate;\r\n        const endDateMatch = typeof endDate !== 'number' || expense.createdAt <= endDate;\r\n        const textMatch = expense.description.toLowerCase().includes(text.toLowerCase());\r\n\r\n        return startDateMatch && endDateMatch && textMatch;\r\n    }).sort((a, b) => {\r\n        if (sortBy === 'date') {\r\n            return a.amount < b.amount ? 1 : -1;\r\n        } else if (sortBy === 'amount') {\r\n            return a.amount < b.amount ? 1 : -1;\r\n        }\r\n    });\r\n};"]}